@startuml Password Manager

' Style configurations
skinparam classAttributeIconSize 0
skinparam monochrome true
skinparam shadowing false
skinparam linetype ortho

' Abstract Database Connection
abstract class DatabaseConnection {
    # pdo: PDO
    # host: string
    # dbname: string
    # username: string
    # password: string
    + __construct()
    # connect(): void
    # disconnect(): void
}

' User Class
class User {
    - id: int
    - username: string
    - password_hash: string
    - db: DatabaseConnection
    + __construct(DatabaseConnection)
    + register(string, string): bool
    + login(string, string): bool
    + validatePassword(string): bool
    + logout(): void
    + isLoggedIn(): bool
    - hashPassword(string): string
}

' PasswordGenerator Class
class PasswordGenerator {
    - length: int
    - includeLowercase: bool
    - includeUppercase: bool
    - includeNumbers: bool
    - includeSpecial: bool
    + __construct(int, bool, bool, bool, bool)
    + generate(): string
    + validateParameters(): bool
    - getCharacterPool(): string
    - ensureMinimumRequirements(string): string
}

' PasswordStorage Class
class PasswordStorage {
    - userId: int
    - encryptionKey: string
    - db: DatabaseConnection
    + __construct(DatabaseConnection, int)
    + store(string, string): bool
    + retrieve(int): string
    + getAll(): array
    + delete(int): bool
    - encrypt(string): string
    - decrypt(string): string
}

' Session Manager Class
class SessionManager {
    - userId: int
    - sessionTimeout: int
    + __construct()
    + start(): void
    + destroy(): void
    + isValid(): bool
    + regenerate(): void
    - validateSession(): bool
}

' Encryption Interface
interface EncryptionInterface {
    + encrypt(string): string
    + decrypt(string): string
    + generateKey(): string
}

' AES Encryption Implementation
class AESEncryption {
    - key: string
    - method: string
    - iv: string
    + __construct(string)
    + encrypt(string): string
    + decrypt(string): string
    + generateKey(): string
    - validateKey(string): bool
}

' Class Relationships
DatabaseConnection <|-- User
DatabaseConnection <|-- PasswordStorage
EncryptionInterface <|.. AESEncryption
PasswordStorage --> AESEncryption
User --> SessionManager
PasswordStorage --> PasswordGenerator

' Notes
note right of User
  Handles user authentication
  and session management
end note

note right of PasswordGenerator
  Generates secure passwords
  with customizable parameters
end note

note right of PasswordStorage
  Manages encrypted storage
  and retrieval of passwords
end note

note right of AESEncryption
  Implements AES-256-CBC
  encryption/decryption
end note

@enduml 